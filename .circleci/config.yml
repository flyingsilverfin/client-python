version: 2.1
commands:
  install-bazel:
    steps:
      - run:
          name: Install bazel and RBE credential
          command: |
            # Install bazel
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

            # Install RBE credential
            bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run:
          command: |
            bazel run @graknlabs_build_tools//ci:run-bazel-rbe << parameters.command >>

  run-grakn-server:
    steps:
      - run:
          name: Grakn Server - Start
          command: |
            bazel build @graknlabs_grakn_core//:assemble-linux-targz
            mkdir dist
            tar -xvzf bazel-bin/external/graknlabs_grakn_core/assemble-linux-targz.tar.gz -C ./dist/
            nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-bazel-rbe:
          command: bazel build //...

  test:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-grakn-server
      - run: bazel test //:test_integration --test_output=streamed

  test-deployment:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - install-bazel
    - run:
        name: Deploy to test repository
        command: |
          echo $(cat VERSION)-$CIRCLE_SHA1 > VERSION
          echo VERSION=$(cat VERSION)
          bazel run //:deploy-pip -- test user pass
    - run:
        name: Run test-deployment
        command: |
          sed -i -e "s/CLIENT_PYTHON_VERSION_MARKER/$(cat VERSION)/g" tests/deployment/requirements.txt
          cat tests/deployment/requirements.txt
#          cd tests/deployment/ && python -m unittest test.py

  sync-dependencies:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: |
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-python:master \
          --targets docs:development

  release-approval:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: bazel run @graknlabs_build_tools//ci:release-approval

  release-pypi:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run: bazel run //:deploy-pip -- pypi $PYPI_REPO_USERNAME $PYPI_REPO_PASSWORD

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete origin client-python-release-branch




workflows:
  version: 2
  client-python:
    jobs:
      - build
      - test
      - deployment-test
      - sync-dependencies:
          filters:
            branches:
              only: master
          requires:
            - build
            - test
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - build
            - test

  # the 'grakn-client-python-release' workflow is triggered by the creation of 'client-python-release-branch' branch in graknlabs/grakn
  # it consists of jobs which:
  # - publishes client-python to PyPI
  # - cleans up the 'client-python-release-branch' branch which was created by the release-approval job
  client-python-release:
    jobs:
      - release-pypi:
          filters:
            branches:
              only: client-python-release-branch
      - release-cleanup:
          requires:
            - release-pypi
          filters:
            branches:
              only: client-python-release-branch
